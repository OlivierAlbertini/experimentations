# https://security.stackexchange.com/questions/216065/extracting-openssl-pre-master-secret-from-nginx
env LD_PRELOAD=/usr/local/lib/libsslkeylog.so;
env SSLKEYLOGFILE=/etc/nginx/ssl-key.logs;

worker_processes  5;  ## Default: 1
worker_rlimit_nofile 8192;

# load_module modules/ngx_http_modsecurity_module.so;
# load_module modules/ngx_http_js_module.so;

events {
  worker_connections  4096;  ## Default: 1024
}

http {

  # include    conf/mime.types;
  # include    /etc/nginx/proxy.conf;

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  upstream camunda_group {
    # Requis si on veut des sticky session (ex: cockpit camunda)
    # hash $realip_remote_addr consistent;

    server     camunda1:8080 max_fails=2 fail_timeout=10s;
    server     camunda2:8081 max_fails=2 fail_timeout=10s;
  }

  server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  # Reverse proxy
  server {
    listen       443 ssl; # 'ssl' parameter tells NGINX to decrypt the traffic

    ssl_prefer_server_ciphers on;
    ssl_certificate     nginx.local.crt; # The certificate file
    ssl_certificate_key nginx.local.key; # The private key file
    ssl_session_timeout 4h;

    server_name  nginx.local;

    proxy_set_header X-Real-IP $remote_addr;
	  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  proxy_set_header Host $host;
	  proxy_set_header Proxy-Connection "";
	  proxy_redirect off;
    proxy_set_header X-Forwarded-Proto $scheme;
	  add_header Front-End-Https on;
    proxy_connect_timeout 90;
    proxy_read_timeout 300;
    proxy_send_timeout 300;

    # Required or it will filter off the CSRF_TOK
    underscores_in_headers on;

    # Pass all requests
    location / {
      proxy_pass    http://camunda_group$uri$is_args$args;
    }

  }

}
